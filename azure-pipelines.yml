# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

jobs:
- job: Build_Android
  displayName: 'Build Android APK'
  steps:
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'assembleDebug'
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactStagingDirectory)'
    inputs:
      SourceFolder: ''
      Contents: '**/*.apk'
      TargetFolder: '$(build.artifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'

- job: Deploy_Android
  displayName: 'Deploy to App Center'
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
- powershell: |
        $token = "739256c4c5772f5c2840fa51d4f4912bf62be1c0"
        $file_path = "$(System.ArtifactsDirectory)/app-debug.apk"
        $app_name = "Android-App"
        $group = "Androidapp"
        $release_notes = "Automated build from Azure DevOps"
        
        $body = @{
          token = $token
          file_path = $file_path
          app_name = $app_name
          group = $group
          release_notes = $release_notes
        } | ConvertTo-Json

        $uri = "https://api.appcenter.ms/v0.1/apps/saurabhpathe/Android-App/uploads/releases"

        Invoke-RestMethod -Uri $uri -Method Post -Headers @{"Content-Type"="application/json"} -Body $body
  displayName: 'Upload APK to App Center'

